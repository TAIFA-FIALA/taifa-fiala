"""
Priority African Data Sources Configuration
==========================================

Configuration and management of high-priority African data sources
for intelligence item discovery, specifically targeting underserved
regions and priority sectors.

Based on architecture review recommendations focusing on:
- African Development Bank initiatives
- National AI strategy announcements  
- Regional Economic Communities
- Multi-language institutional sources
- Local innovation hubs
"""

import asyncio
import logging
from typing import Dict, List, Optional, Any, Tuple
from datetime import datetime
from dataclasses import dataclass, field
from enum import Enum
import json
from urllib.parse import urljoin, urlparse

from app.core.multilingual_search import SupportedLanguage

# Configure logging
logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

# =============================================================================
# PRIORITY SOURCE MODELS
# =============================================================================

class SourceCategory(Enum):
    """Categories of funding sources"""
    MULTILATERAL_BANK = "multilateral_bank"
    REGIONAL_BANK = "regional_bank"
    GOVERNMENT_AGENCY = "government_agency"
    RESEARCH_INSTITUTE = "research_institute"
    FOUNDATION = "foundation"
    INNOVATION_HUB = "innovation_hub"
    ACCELERATOR = "accelerator"
    VENTURE_FUND = "venture_fund"
    DEVELOPMENT_AGENCY = "development_agency"
    REGIONAL_ORGANIZATION = "regional_organization"

class GeographicScope(Enum):
    """Geographic scope of sources"""
    CONTINENTAL = "continental"
    REGIONAL = "regional"
    NATIONAL = "national"
    SUBREGIONAL = "subregional"

class SectorFocus(Enum):
    """Sector focus areas"""
    HEALTHCARE = "healthcare"
    AGRICULTURE = "agriculture"
    CLIMATE = "climate"
    EDUCATION = "education"
    FINTECH = "fintech"
    INFRASTRUCTURE = "infrastructure"
    GENERAL_TECH = "general_tech"
    MULTI_SECTOR = "multi_sector"

@dataclass
class DataSourceConfig:
    """Configuration for a priority data source"""
    source_id: str
    name: str
    category: SourceCategory
    geographic_scope: GeographicScope
    primary_language: SupportedLanguage
    secondary_languages: List[SupportedLanguage] = field(default_factory=list)
    
    # Source details
    base_url: str = ""
    rss_feeds: List[str] = field(default_factory=list)
    api_endpoints: List[str] = field(default_factory=list)
    search_pages: List[str] = field(default_factory=list)
    
    # Focus areas
    sector_focus: List[SectorFocus] = field(default_factory=list)
    target_countries: List[str] = field(default_factory=list)
    
    # Equity metrics
    underserved_focus: bool = False
    women_focus: bool = False
    youth_focus: bool = False
    rural_focus: bool = False
    
    # Processing configuration
    search_frequency_hours: int = 24
    priority_weight: float = 1.0
    is_active: bool = True
    
    # Metadata
    description: str = ""
    contact_info: str = ""
    last_updated: Optional[datetime] = None
    
    def to_dict(self) -> Dict[str, Any]:
        """Convert to dictionary"""
        return {
            'source_id': self.source_id,
            'name': self.name,
            'category': self.category.value,
            'geographic_scope': self.geographic_scope.value,
            'primary_language': self.primary_language.value,
            'secondary_languages': [lang.value for lang in self.secondary_languages],
            'base_url': self.base_url,
            'rss_feeds': self.rss_feeds,
            'api_endpoints': self.api_endpoints,
            'search_pages': self.search_pages,
            'sector_focus': [sector.value for sector in self.sector_focus],
            'target_countries': self.target_countries,
            'underserved_focus': self.underserved_focus,
            'women_focus': self.women_focus,
            'youth_focus': self.youth_focus,
            'rural_focus': self.rural_focus,
            'search_frequency_hours': self.search_frequency_hours,
            'priority_weight': self.priority_weight,
            'is_active': self.is_active,
            'description': self.description,
            'contact_info': self.contact_info,
            'last_updated': self.last_updated.isoformat() if self.last_updated else None
        }

# =============================================================================
# PRIORITY DATA SOURCES REGISTRY
# =============================================================================

class PriorityDataSourceRegistry:
    """Registry and management of priority African data sources"""
    
    def __init__(self):
        self.logger = logging.getLogger(__name__)
        self.sources = {}
        self._initialize_priority_sources()
    
    def _initialize_priority_sources(self):
        """Initialize the registry with priority African data sources"""
        
        # =============================================================================
        # MULTILATERAL DEVELOPMENT BANKS
        # =============================================================================
        
        # African Development Bank
        self.sources['afdb'] = DataSourceConfig(
            source_id='afdb',
            name='African Development Bank',
            category=SourceCategory.MULTILATERAL_BANK,
            geographic_scope=GeographicScope.CONTINENTAL,
            primary_language=SupportedLanguage.ENGLISH,
            secondary_languages=[SupportedLanguage.FRENCH, SupportedLanguage.ARABIC],
            base_url='https://www.afdb.org',
            rss_feeds=[
                'https://www.afdb.org/en/news-and-events/feed',
                'https://www.afdb.org/en/projects-operations/feed'
            ],
            search_pages=[
                'https://www.afdb.org/en/topics/digitalization',
                'https://www.afdb.org/en/topics/innovation',
                'https://www.afdb.org/en/funding'
            ],
            sector_focus=[SectorFocus.HEALTHCARE, SectorFocus.AGRICULTURE, SectorFocus.CLIMATE, SectorFocus.INFRASTRUCTURE],
            target_countries=['ALL_AFRICA'],
            underserved_focus=True,
            search_frequency_hours=12,
            priority_weight=2.0,
            description='Continental development bank with focus on infrastructure and innovation funding',
            contact_info='info@afdb.org'
        )
        
        # World Bank Africa
        self.sources['worldbank_africa'] = DataSourceConfig(
            source_id='worldbank_africa',
            name='World Bank Africa',
            category=SourceCategory.MULTILATERAL_BANK,
            geographic_scope=GeographicScope.CONTINENTAL,
            primary_language=SupportedLanguage.ENGLISH,
            secondary_languages=[SupportedLanguage.FRENCH, SupportedLanguage.ARABIC],
            base_url='https://www.worldbank.org/en/region/afr',
            rss_feeds=[
                'https://www.worldbank.org/en/region/afr/feed',
                'https://www.worldbank.org/en/topic/digitaldevelopment/feed'
            ],
            search_pages=[
                'https://www.worldbank.org/en/region/afr/funding',
                'https://www.worldbank.org/en/topic/digitaldevelopment'
            ],
            sector_focus=[SectorFocus.MULTI_SECTOR],
            target_countries=['ALL_AFRICA'],
            underserved_focus=True,
            priority_weight=1.8,
            description='World Bank Africa region funding and development programs'
        )
        
        # =============================================================================
        # REGIONAL DEVELOPMENT BANKS
        # =============================================================================
        
        # West African Development Bank (BOAD)
        self.sources['boad'] = DataSourceConfig(\n            source_id='boad',\n            name='West African Development Bank (BOAD)',\n            category=SourceCategory.REGIONAL_BANK,\n            geographic_scope=GeographicScope.REGIONAL,\n            primary_language=SupportedLanguage.FRENCH,\n            secondary_languages=[SupportedLanguage.ENGLISH],\n            base_url='https://www.boad.org',\n            rss_feeds=['https://www.boad.org/feed'],\n            search_pages=[\n                'https://www.boad.org/financement',\n                'https://www.boad.org/appels-offres'\n            ],\n            sector_focus=[SectorFocus.AGRICULTURE, SectorFocus.INFRASTRUCTURE, SectorFocus.HEALTHCARE],\n            target_countries=['BJ', 'BF', 'CI', 'GW', 'ML', 'NE', 'SN', 'TG'],\n            underserved_focus=True,\n            rural_focus=True,\n            search_frequency_hours=24,\n            priority_weight=1.5,\n            description='Regional development bank for West Africa with focus on rural development'\n        )\n        \n        # Development Bank of Central African States (BDEAC)\n        self.sources['bdeac'] = DataSourceConfig(\n            source_id='bdeac',\n            name='Development Bank of Central African States (BDEAC)',\n            category=SourceCategory.REGIONAL_BANK,\n            geographic_scope=GeographicScope.REGIONAL,\n            primary_language=SupportedLanguage.FRENCH,\n            secondary_languages=[SupportedLanguage.ENGLISH],\n            base_url='https://www.bdeac.org',\n            search_pages=[\n                'https://www.bdeac.org/financement',\n                'https://www.bdeac.org/projets'\n            ],\n            sector_focus=[SectorFocus.AGRICULTURE, SectorFocus.INFRASTRUCTURE, SectorFocus.CLIMATE],\n            target_countries=['CM', 'CF', 'TD', 'CG', 'GQ', 'GA'],\n            underserved_focus=True,\n            rural_focus=True,\n            search_frequency_hours=24,\n            priority_weight=2.0,  # Higher priority for underserved Central Africa\n            description='Regional development bank for Central Africa, critical for underserved regions'\n        )\n        \n        # =============================================================================\n        # DEVELOPMENT AGENCIES\n        # =============================================================================\n        \n        # Agence Française de Développement (AFD)\n        self.sources['afd'] = DataSourceConfig(\n            source_id='afd',\n            name='Agence Française de Développement (AFD)',\n            category=SourceCategory.DEVELOPMENT_AGENCY,\n            geographic_scope=GeographicScope.CONTINENTAL,\n            primary_language=SupportedLanguage.FRENCH,\n            secondary_languages=[SupportedLanguage.ENGLISH],\n            base_url='https://www.afd.fr',\n            rss_feeds=[\n                'https://www.afd.fr/fr/actualites/feed',\n                'https://www.afd.fr/fr/appels-candidatures/feed'\n            ],\n            search_pages=[\n                'https://www.afd.fr/fr/appels-candidatures',\n                'https://www.afd.fr/fr/page-region-pays/afrique'\n            ],\n            sector_focus=[SectorFocus.HEALTHCARE, SectorFocus.AGRICULTURE, SectorFocus.CLIMATE, SectorFocus.EDUCATION],\n            target_countries=['ALL_FRANCOPHONE_AFRICA'],\n            underserved_focus=True,\n            women_focus=True,\n            youth_focus=True,\n            search_frequency_hours=12,\n            priority_weight=1.8,\n            description='French development agency with strong focus on francophone Africa'\n        )\n        \n        # USAID Africa\n        self.sources['usaid_africa'] = DataSourceConfig(\n            source_id='usaid_africa',\n            name='USAID Africa',\n            category=SourceCategory.DEVELOPMENT_AGENCY,\n            geographic_scope=GeographicScope.CONTINENTAL,\n            primary_language=SupportedLanguage.ENGLISH,\n            base_url='https://www.usaid.gov/africa',\n            rss_feeds=['https://www.usaid.gov/africa/feed'],\n            search_pages=[\n                'https://www.usaid.gov/africa/funding-opportunities',\n                'https://www.usaid.gov/digital-development'\n            ],\n            sector_focus=[SectorFocus.HEALTHCARE, SectorFocus.AGRICULTURE, SectorFocus.EDUCATION],\n            target_countries=['ALL_AFRICA'],\n            underserved_focus=True,\n            women_focus=True,\n            priority_weight=1.5,\n            description='US development agency with significant African programs'\n        )\n        \n        # =============================================================================\n        # RESEARCH INSTITUTES AND FOUNDATIONS\n        # =============================================================================\n        \n        # Science for Africa Foundation (SFA)\n        self.sources['sfa'] = DataSourceConfig(\n            source_id='sfa',\n            name='Science for Africa Foundation (SFA)',\n            category=SourceCategory.RESEARCH_INSTITUTE,\n            geographic_scope=GeographicScope.CONTINENTAL,\n            primary_language=SupportedLanguage.ENGLISH,\n            base_url='https://scienceforafrica.org',\n            rss_feeds=['https://scienceforafrica.org/feed'],\n            search_pages=[\n                'https://scienceforafrica.org/funding-opportunities',\n                'https://scienceforafrica.org/programs'\n            ],\n            sector_focus=[SectorFocus.HEALTHCARE, SectorFocus.AGRICULTURE, SectorFocus.CLIMATE],\n            target_countries=['ALL_AFRICA'],\n            underserved_focus=True,\n            women_focus=True,\n            youth_focus=True,\n            search_frequency_hours=12,\n            priority_weight=1.7,\n            description='Pan-African foundation supporting scientific research and innovation'\n        )\n        \n        # Mastercard Foundation\n        self.sources['mastercard_foundation'] = DataSourceConfig(\n            source_id='mastercard_foundation',\n            name='Mastercard Foundation',\n            category=SourceCategory.FOUNDATION,\n            geographic_scope=GeographicScope.CONTINENTAL,\n            primary_language=SupportedLanguage.ENGLISH,\n            secondary_languages=[SupportedLanguage.FRENCH],\n            base_url='https://mastercardfd.org',\n            rss_feeds=['https://mastercardfd.org/feed'],\n            search_pages=[\n                'https://mastercardfd.org/funding-opportunities',\n                'https://mastercardfd.org/programs'\n            ],\n            sector_focus=[SectorFocus.FINTECH, SectorFocus.EDUCATION, SectorFocus.AGRICULTURE],\n            target_countries=['ALL_AFRICA'],\n            underserved_focus=True,\n            women_focus=True,\n            youth_focus=True,\n            rural_focus=True,\n            search_frequency_hours=12,\n            priority_weight=1.8,\n            description='Focus on financial inclusion and youth empowerment in Africa'\n        )\n        \n        # =============================================================================\n        # REGIONAL ECONOMIC COMMUNITIES\n        # =============================================================================\n        \n        # Economic Community of West African States (ECOWAS)\n        self.sources['ecowas'] = DataSourceConfig(\n            source_id='ecowas',\n            name='Economic Community of West African States (ECOWAS)',\n            category=SourceCategory.REGIONAL_ORGANIZATION,\n            geographic_scope=GeographicScope.REGIONAL,\n            primary_language=SupportedLanguage.ENGLISH,\n            secondary_languages=[SupportedLanguage.FRENCH],\n            base_url='https://ecowas.int',\n            rss_feeds=['https://ecowas.int/feed'],\n            search_pages=[\n                'https://ecowas.int/funding',\n                'https://ecowas.int/programs'\n            ],\n            sector_focus=[SectorFocus.INFRASTRUCTURE, SectorFocus.AGRICULTURE, SectorFocus.GENERAL_TECH],\n            target_countries=['BJ', 'BF', 'CV', 'CI', 'GM', 'GH', 'GN', 'GW', 'LR', 'ML', 'NE', 'NG', 'SN', 'SL', 'TG'],\n            underserved_focus=True,\n            search_frequency_hours=24,\n            priority_weight=1.4,\n            description='West African regional organization with development programs'\n        )\n        \n        # East African Community (EAC)\n        self.sources['eac'] = DataSourceConfig(\n            source_id='eac',\n            name='East African Community (EAC)',\n            category=SourceCategory.REGIONAL_ORGANIZATION,\n            geographic_scope=GeographicScope.REGIONAL,\n            primary_language=SupportedLanguage.ENGLISH,\n            secondary_languages=[SupportedLanguage.SWAHILI],\n            base_url='https://eac.int',\n            rss_feeds=['https://eac.int/feed'],\n            search_pages=[\n                'https://eac.int/funding',\n                'https://eac.int/programs'\n            ],\n            sector_focus=[SectorFocus.INFRASTRUCTURE, SectorFocus.AGRICULTURE, SectorFocus.GENERAL_TECH],\n            target_countries=['BI', 'KE', 'RW', 'SS', 'TZ', 'UG'],\n            underserved_focus=True,\n            search_frequency_hours=24,\n            priority_weight=1.3,\n            description='East African regional organization with integration programs'\n        )\n        \n        # Southern African Development Community (SADC)\n        self.sources['sadc'] = DataSourceConfig(\n            source_id='sadc',\n            name='Southern African Development Community (SADC)',\n            category=SourceCategory.REGIONAL_ORGANIZATION,\n            geographic_scope=GeographicScope.REGIONAL,\n            primary_language=SupportedLanguage.ENGLISH,\n            secondary_languages=[SupportedLanguage.PORTUGUESE],\n            base_url='https://sadc.int',\n            rss_feeds=['https://sadc.int/feed'],\n            search_pages=[\n                'https://sadc.int/funding',\n                'https://sadc.int/programmes'\n            ],\n            sector_focus=[SectorFocus.INFRASTRUCTURE, SectorFocus.AGRICULTURE, SectorFocus.CLIMATE],\n            target_countries=['AO', 'BW', 'CD', 'SZ', 'LS', 'MG', 'MW', 'MU', 'MZ', 'NA', 'SC', 'ZA', 'TZ', 'ZM', 'ZW'],\n            underserved_focus=True,\n            search_frequency_hours=24,\n            priority_weight=1.3,\n            description='Southern African regional organization with development programs'\n        )\n        \n        # =============================================================================\n        # INNOVATION HUBS AND ACCELERATORS\n        # =============================================================================\n        \n        # iHub (Kenya)\n        self.sources['ihub_kenya'] = DataSourceConfig(\n            source_id='ihub_kenya',\n            name='iHub Kenya',\n            category=SourceCategory.INNOVATION_HUB,\n            geographic_scope=GeographicScope.NATIONAL,\n            primary_language=SupportedLanguage.ENGLISH,\n            base_url='https://ihub.co.ke',\n            rss_feeds=['https://ihub.co.ke/feed'],\n            search_pages=[\n                'https://ihub.co.ke/programs',\n                'https://ihub.co.ke/funding'\n            ],\n            sector_focus=[SectorFocus.GENERAL_TECH, SectorFocus.FINTECH, SectorFocus.HEALTHCARE],\n            target_countries=['KE'],\n            youth_focus=True,\n            search_frequency_hours=24,\n            priority_weight=1.2,\n            description='Leading innovation hub in East Africa'\n        )\n        \n        # Co-Creation Hub (Nigeria)\n        self.sources['cchub_nigeria'] = DataSourceConfig(\n            source_id='cchub_nigeria',\n            name='Co-Creation Hub (CcHUB)',\n            category=SourceCategory.INNOVATION_HUB,\n            geographic_scope=GeographicScope.NATIONAL,\n            primary_language=SupportedLanguage.ENGLISH,\n            base_url='https://cchub.co',\n            rss_feeds=['https://cchub.co/feed'],\n            search_pages=[\n                'https://cchub.co/programs',\n                'https://cchub.co/funding'\n            ],\n            sector_focus=[SectorFocus.GENERAL_TECH, SectorFocus.FINTECH, SectorFocus.HEALTHCARE],\n            target_countries=['NG'],\n            youth_focus=True,\n            search_frequency_hours=24,\n            priority_weight=1.2,\n            description='Leading innovation hub in West Africa'\n        )\n        \n        # CIPESA (Uganda) - Collaboration on International ICT Policy for East and Southern Africa\n        self.sources['cipesa_uganda'] = DataSourceConfig(\n            source_id='cipesa_uganda',\n            name='CIPESA Uganda',\n            category=SourceCategory.RESEARCH_INSTITUTE,\n            geographic_scope=GeographicScope.REGIONAL,\n            primary_language=SupportedLanguage.ENGLISH,\n            base_url='https://cipesa.org',\n            rss_feeds=['https://cipesa.org/feed'],\n            search_pages=[\n                'https://cipesa.org/funding',\n                'https://cipesa.org/programs'\n            ],\n            sector_focus=[SectorFocus.GENERAL_TECH, SectorFocus.EDUCATION],\n            target_countries=['UG', 'KE', 'TZ', 'RW', 'ZM', 'ZW'],\n            underserved_focus=True,\n            search_frequency_hours=24,\n            priority_weight=1.4,\n            description='ICT policy research and capacity building in East/Southern Africa'\n        )\n        \n        # =============================================================================\n        # NATIONAL AI STRATEGY SOURCES\n        # =============================================================================\n        \n        # Rwanda Development Board\n        self.sources['rdb_rwanda'] = DataSourceConfig(\n            source_id='rdb_rwanda',\n            name='Rwanda Development Board',\n            category=SourceCategory.GOVERNMENT_AGENCY,\n            geographic_scope=GeographicScope.NATIONAL,\n            primary_language=SupportedLanguage.ENGLISH,\n            secondary_languages=[SupportedLanguage.FRENCH],\n            base_url='https://rdb.rw',\n            rss_feeds=['https://rdb.rw/feed'],\n            search_pages=[\n                'https://rdb.rw/funding',\n                'https://rdb.rw/innovation'\n            ],\n            sector_focus=[SectorFocus.GENERAL_TECH, SectorFocus.HEALTHCARE, SectorFocus.FINTECH],\n            target_countries=['RW'],\n            underserved_focus=True,\n            women_focus=True,\n            youth_focus=True,\n            search_frequency_hours=24,\n            priority_weight=1.5,\n            description='Rwanda national development agency with strong AI focus'\n        )\n        \n        # Ghana Investment Promotion Centre\n        self.sources['gipc_ghana'] = DataSourceConfig(\n            source_id='gipc_ghana',\n            name='Ghana Investment Promotion Centre',\n            category=SourceCategory.GOVERNMENT_AGENCY,\n            geographic_scope=GeographicScope.NATIONAL,\n            primary_language=SupportedLanguage.ENGLISH,\n            base_url='https://gipc.gov.gh',\n            search_pages=[\n                'https://gipc.gov.gh/funding',\n                'https://gipc.gov.gh/programs'\n            ],\n            sector_focus=[SectorFocus.GENERAL_TECH, SectorFocus.AGRICULTURE, SectorFocus.FINTECH],\n            target_countries=['GH'],\n            women_focus=True,\n            youth_focus=True,\n            search_frequency_hours=24,\n            priority_weight=1.3,\n            description='Ghana national investment promotion with tech focus'\n        )\n        \n        # =============================================================================\n        # SPECIALIZED FUNDING SOURCES\n        # =============================================================================\n        \n        # NEPAD (African Union Development Agency)\n        self.sources['nepad'] = DataSourceConfig(\n            source_id='nepad',\n            name='NEPAD (African Union Development Agency)',\n            category=SourceCategory.REGIONAL_ORGANIZATION,\n            geographic_scope=GeographicScope.CONTINENTAL,\n            primary_language=SupportedLanguage.ENGLISH,\n            secondary_languages=[SupportedLanguage.FRENCH, SupportedLanguage.ARABIC],\n            base_url='https://nepad.org',\n            rss_feeds=['https://nepad.org/feed'],\n            search_pages=[\n                'https://nepad.org/funding',\n                'https://nepad.org/programmes'\n            ],\n            sector_focus=[SectorFocus.HEALTHCARE, SectorFocus.AGRICULTURE, SectorFocus.INFRASTRUCTURE],\n            target_countries=['ALL_AFRICA'],\n            underserved_focus=True,\n            women_focus=True,\n            youth_focus=True,\n            search_frequency_hours=12,\n            priority_weight=1.8,\n            description='African Union development agency with continental programs'\n        )\n        \n        # Islamic Development Bank (IsDB)\n        self.sources['isdb'] = DataSourceConfig(\n            source_id='isdb',\n            name='Islamic Development Bank (IsDB)',\n            category=SourceCategory.MULTILATERAL_BANK,\n            geographic_scope=GeographicScope.REGIONAL,\n            primary_language=SupportedLanguage.ARABIC,\n            secondary_languages=[SupportedLanguage.ENGLISH, SupportedLanguage.FRENCH],\n            base_url='https://isdb.org',\n            rss_feeds=['https://isdb.org/feed'],\n            search_pages=[\n                'https://isdb.org/funding',\n                'https://isdb.org/programmes'\n            ],\n            sector_focus=[SectorFocus.HEALTHCARE, SectorFocus.AGRICULTURE, SectorFocus.EDUCATION],\n            target_countries=['DZ', 'TD', 'DJ', 'EG', 'GM', 'GN', 'LY', 'ML', 'MR', 'MA', 'NE', 'NG', 'SN', 'SL', 'SO', 'SD', 'TN', 'UG'],\n            underserved_focus=True,\n            women_focus=True,\n            search_frequency_hours=24,\n            priority_weight=1.6,\n            description='Islamic development bank serving African member countries'\n        )\n        \n        # Gates Foundation Africa\n        self.sources['gates_africa'] = DataSourceConfig(\n            source_id='gates_africa',\n            name='Bill & Melinda Gates Foundation Africa',\n            category=SourceCategory.FOUNDATION,\n            geographic_scope=GeographicScope.CONTINENTAL,\n            primary_language=SupportedLanguage.ENGLISH,\n            base_url='https://gatesfoundation.org',\n            rss_feeds=['https://gatesfoundation.org/feed'],\n            search_pages=[\n                'https://gatesfoundation.org/funding-opportunities',\n                'https://gatesfoundation.org/our-work/regions/africa'\n            ],\n            sector_focus=[SectorFocus.HEALTHCARE, SectorFocus.AGRICULTURE, SectorFocus.EDUCATION],\n            target_countries=['ALL_AFRICA'],\n            underserved_focus=True,\n            women_focus=True,\n            rural_focus=True,\n            search_frequency_hours=12,\n            priority_weight=1.7,\n            description='Major foundation with significant African health and agriculture programs'\n        )\n        \n        # =============================================================================\n        # VENTURE CAPITAL AND PRIVATE SECTOR\n        # =============================================================================\n        \n        # AfricArena\n        self.sources['africarena'] = DataSourceConfig(\n            source_id='africarena',\n            name='AfricArena',\n            category=SourceCategory.VENTURE_FUND,\n            geographic_scope=GeographicScope.CONTINENTAL,\n            primary_language=SupportedLanguage.ENGLISH,\n            secondary_languages=[SupportedLanguage.FRENCH],\n            base_url='https://africarena.com',\n            rss_feeds=['https://africarena.com/feed'],\n            search_pages=[\n                'https://africarena.com/funding',\n                'https://africarena.com/startups'\n            ],\n            sector_focus=[SectorFocus.GENERAL_TECH, SectorFocus.FINTECH, SectorFocus.HEALTHCARE],\n            target_countries=['ALL_AFRICA'],\n            youth_focus=True,\n            search_frequency_hours=24,\n            priority_weight=1.3,\n            description='Pan-African startup ecosystem platform and funding network'\n        )\n        \n        # Catalyst Fund\n        self.sources['catalyst_fund'] = DataSourceConfig(\n            source_id='catalyst_fund',\n            name='Catalyst Fund',\n            category=SourceCategory.VENTURE_FUND,\n            geographic_scope=GeographicScope.CONTINENTAL,\n            primary_language=SupportedLanguage.ENGLISH,\n            base_url='https://catalyst.fund',\n            rss_feeds=['https://catalyst.fund/feed'],\n            search_pages=[\n                'https://catalyst.fund/funding',\n                'https://catalyst.fund/apply'\n            ],\n            sector_focus=[SectorFocus.FINTECH, SectorFocus.HEALTHCARE, SectorFocus.AGRICULTURE],\n            target_countries=['ALL_AFRICA'],\n            underserved_focus=True,\n            women_focus=True,\n            rural_focus=True,\n            search_frequency_hours=12,\n            priority_weight=1.6,\n            description='Inclusive fintech accelerator focused on underserved populations'\n        )\n    \n    def get_all_sources(self) -> List[DataSourceConfig]:\n        \"\"\"Get all registered data sources\"\"\"\n        return list(self.sources.values())\n    \n    def get_sources_by_category(self, category: SourceCategory) -> List[DataSourceConfig]:\n        \"\"\"Get sources by category\"\"\"\n        return [source for source in self.sources.values() if source.category == category]\n    \n    def get_sources_by_language(self, language: SupportedLanguage) -> List[DataSourceConfig]:\n        \"\"\"Get sources by primary language\"\"\"\n        return [source for source in self.sources.values() \n                if source.primary_language == language or language in source.secondary_languages]\n    \n    def get_sources_by_region(self, countries: List[str]) -> List[DataSourceConfig]:\n        \"\"\"Get sources relevant to specific countries\"\"\"\n        relevant_sources = []\n        \n        for source in self.sources.values():\n            if ('ALL_AFRICA' in source.target_countries or \n                'ALL_FRANCOPHONE_AFRICA' in source.target_countries or\n                any(country in source.target_countries for country in countries)):\n                relevant_sources.append(source)\n        \n        return relevant_sources\n    \n    def get_sources_by_sector(self, sector: SectorFocus) -> List[DataSourceConfig]:\n        \"\"\"Get sources by sector focus\"\"\"\n        return [source for source in self.sources.values() \n                if sector in source.sector_focus or SectorFocus.MULTI_SECTOR in source.sector_focus]\n    \n    def get_underserved_focused_sources(self) -> List[DataSourceConfig]:\n        \"\"\"Get sources that focus on underserved regions\"\"\"\n        return [source for source in self.sources.values() if source.underserved_focus]\n    \n    def get_inclusion_focused_sources(self) -> List[DataSourceConfig]:\n        \"\"\"Get sources that focus on inclusion (women, youth, rural)\"\"\"\n        return [source for source in self.sources.values() \n                if source.women_focus or source.youth_focus or source.rural_focus]\n    \n    def get_high_priority_sources(self, min_priority: float = 1.5) -> List[DataSourceConfig]:\n        \"\"\"Get high-priority sources\"\"\"\n        return [source for source in self.sources.values() \n                if source.priority_weight >= min_priority and source.is_active]\n    \n    def get_frequent_monitoring_sources(self, max_frequency_hours: int = 12) -> List[DataSourceConfig]:\n        \"\"\"Get sources that should be monitored frequently\"\"\"\n        return [source for source in self.sources.values() \n                if source.search_frequency_hours <= max_frequency_hours and source.is_active]\n    \n    def get_source_by_id(self, source_id: str) -> Optional[DataSourceConfig]:\n        \"\"\"Get specific source by ID\"\"\"\n        return self.sources.get(source_id)\n    \n    def add_source(self, source: DataSourceConfig) -> bool:\n        \"\"\"Add new source to registry\"\"\"\n        try:\n            if source.source_id in self.sources:\n                self.logger.warning(f\"Source {source.source_id} already exists\")\n                return False\n            \n            self.sources[source.source_id] = source\n            self.logger.info(f\"Added source: {source.name}\")\n            return True\n            \n        except Exception as e:\n            self.logger.error(f\"Failed to add source: {e}\")\n            return False\n    \n    def update_source(self, source_id: str, updates: Dict[str, Any]) -> bool:\n        \"\"\"Update existing source\"\"\"\n        try:\n            if source_id not in self.sources:\n                self.logger.error(f\"Source {source_id} not found\")\n                return False\n            \n            source = self.sources[source_id]\n            for key, value in updates.items():\n                if hasattr(source, key):\n                    setattr(source, key, value)\n            \n            source.last_updated = datetime.now()\n            self.logger.info(f\"Updated source: {source.name}\")\n            return True\n            \n        except Exception as e:\n            self.logger.error(f\"Failed to update source: {e}\")\n            return False\n    \n    def deactivate_source(self, source_id: str) -> bool:\n        \"\"\"Deactivate a source\"\"\"\n        return self.update_source(source_id, {'is_active': False})\n    \n    def activate_source(self, source_id: str) -> bool:\n        \"\"\"Activate a source\"\"\"\n        return self.update_source(source_id, {'is_active': True})\n    \n    def get_sources_summary(self) -> Dict[str, Any]:\n        \"\"\"Get summary statistics of registered sources\"\"\"\n        try:\n            active_sources = [s for s in self.sources.values() if s.is_active]\n            \n            # Category distribution\n            category_counts = {}\n            for source in active_sources:\n                category = source.category.value\n                category_counts[category] = category_counts.get(category, 0) + 1\n            \n            # Language distribution\n            language_counts = {}\n            for source in active_sources:\n                lang = source.primary_language.value\n                language_counts[lang] = language_counts.get(lang, 0) + 1\n            \n            # Geographic scope distribution\n            scope_counts = {}\n            for source in active_sources:\n                scope = source.geographic_scope.value\n                scope_counts[scope] = scope_counts.get(scope, 0) + 1\n            \n            # Equity focus statistics\n            equity_stats = {\n                'underserved_focus': sum(1 for s in active_sources if s.underserved_focus),\n                'women_focus': sum(1 for s in active_sources if s.women_focus),\n                'youth_focus': sum(1 for s in active_sources if s.youth_focus),\n                'rural_focus': sum(1 for s in active_sources if s.rural_focus)\n            }\n            \n            # Priority statistics\n            priority_stats = {\n                'high_priority': sum(1 for s in active_sources if s.priority_weight >= 1.5),\n                'frequent_monitoring': sum(1 for s in active_sources if s.search_frequency_hours <= 12),\n                'average_priority': sum(s.priority_weight for s in active_sources) / len(active_sources) if active_sources else 0\n            }\n            \n            return {\n                'total_sources': len(self.sources),\n                'active_sources': len(active_sources),\n                'category_distribution': category_counts,\n                'language_distribution': language_counts,\n                'geographic_scope_distribution': scope_counts,\n                'equity_focus_statistics': equity_stats,\n                'priority_statistics': priority_stats\n            }\n            \n        except Exception as e:\n            self.logger.error(f\"Failed to get sources summary: {e}\")\n            return {}\n    \n    def export_sources_config(self) -> Dict[str, Any]:\n        \"\"\"Export sources configuration for backup/migration\"\"\"\n        try:\n            return {\n                'sources': {source_id: source.to_dict() for source_id, source in self.sources.items()},\n                'export_timestamp': datetime.now().isoformat(),\n                'total_sources': len(self.sources)\n            }\n            \n        except Exception as e:\n            self.logger.error(f\"Failed to export sources config: {e}\")\n            return {}\n    \n    def import_sources_config(self, config: Dict[str, Any]) -> bool:\n        \"\"\"Import sources configuration from backup\"\"\"\n        try:\n            imported_sources = config.get('sources', {})\n            \n            for source_id, source_data in imported_sources.items():\n                # Convert back to DataSourceConfig\n                source = DataSourceConfig(\n                    source_id=source_data['source_id'],\n                    name=source_data['name'],\n                    category=SourceCategory(source_data['category']),\n                    geographic_scope=GeographicScope(source_data['geographic_scope']),\n                    primary_language=SupportedLanguage(source_data['primary_language']),\n                    secondary_languages=[SupportedLanguage(lang) for lang in source_data.get('secondary_languages', [])],\n                    base_url=source_data.get('base_url', ''),\n                    rss_feeds=source_data.get('rss_feeds', []),\n                    api_endpoints=source_data.get('api_endpoints', []),\n                    search_pages=source_data.get('search_pages', []),\n                    sector_focus=[SectorFocus(sector) for sector in source_data.get('sector_focus', [])],\n                    target_countries=source_data.get('target_countries', []),\n                    underserved_focus=source_data.get('underserved_focus', False),\n                    women_focus=source_data.get('women_focus', False),\n                    youth_focus=source_data.get('youth_focus', False),\n                    rural_focus=source_data.get('rural_focus', False),\n                    search_frequency_hours=source_data.get('search_frequency_hours', 24),\n                    priority_weight=source_data.get('priority_weight', 1.0),\n                    is_active=source_data.get('is_active', True),\n                    description=source_data.get('description', ''),\n                    contact_info=source_data.get('contact_info', ''),\n                    last_updated=datetime.fromisoformat(source_data['last_updated']) if source_data.get('last_updated') else None\n                )\n                \n                self.sources[source_id] = source\n            \n            self.logger.info(f\"Imported {len(imported_sources)} sources\")\n            return True\n            \n        except Exception as e:\n            self.logger.error(f\"Failed to import sources config: {e}\")\n            return False\n\n# =============================================================================\n# USAGE EXAMPLE\n# =============================================================================\n\nasync def example_usage():\n    \"\"\"Example usage of priority data sources registry\"\"\"\n    registry = PriorityDataSourceRegistry()\n    \n    # Get all sources\n    all_sources = registry.get_all_sources()\n    print(f\"Total sources: {len(all_sources)}\")\n    \n    # Get underserved-focused sources\n    underserved_sources = registry.get_underserved_focused_sources()\n    print(f\"Underserved-focused sources: {len(underserved_sources)}\")\n    \n    # Get high-priority sources\n    high_priority = registry.get_high_priority_sources(1.5)\n    print(f\"High-priority sources: {len(high_priority)}\")\n    \n    # Get sources by language\n    french_sources = registry.get_sources_by_language(SupportedLanguage.FRENCH)\n    print(f\"French sources: {len(french_sources)}\")\n    \n    # Get sources by sector\n    healthcare_sources = registry.get_sources_by_sector(SectorFocus.HEALTHCARE)\n    print(f\"Healthcare sources: {len(healthcare_sources)}\")\n    \n    # Get sources for Central Africa\n    central_africa_sources = registry.get_sources_by_region(['CF', 'TD', 'CD', 'CM'])\n    print(f\"Central Africa sources: {len(central_africa_sources)}\")\n    \n    # Get summary statistics\n    summary = registry.get_sources_summary()\n    print(f\"Summary: {summary}\")\n    \n    # Show some specific high-priority sources\n    print(\"\\n=== High-Priority Sources ===\")\n    for source in high_priority[:5]:\n        print(f\"- {source.name} ({source.category.value}) - Priority: {source.priority_weight}\")\n        print(f\"  Languages: {source.primary_language.value} + {[lang.value for lang in source.secondary_languages]}\")\n        print(f\"  Underserved Focus: {source.underserved_focus}\")\n        print(f\"  Search Frequency: {source.search_frequency_hours} hours\")\n        print()\n\nif __name__ == \"__main__\":\n    asyncio.run(example_usage())"